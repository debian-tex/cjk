cjk for Debian
--------------

1. Getting the source file
--------------------------

The upstream source tarball is created each time you build the package using the
`get-orig-source' target in debian/rules.  This target will look at the `debian/
changelog' file and use the ISO date that is provided in the package version
numbering.

For instance, if the first line of the Debian changelog files looks like:
cjk (4.8.2+git20090105-1) unstable; urgency=medium
then it will strip off `4.8.2+git' and `-1' from the version, so you get the
date `20090105'.

The `get-orig-source' target will now transform that date into Unix time, and
use this to fetch a tarball from the upstream GIT server up to 5 January 2009.

You may ask yourself why I bother using this mechanism.  I find it often quite
cumbersome to recreate the original source tarball for each and every release.
There are naming conventions to abide by, and I keep forgetting them.  Hence
this system in which I just have to modify the Debian version in the changelog
to get an updated upstream tarball, completely according to the conventions that
apply on Debian.


2. Patching
-----------

The Debian source package of `cjk' uses dpatch as patching mechanism.

In debian/patches you have a `00list' file in which you define all the dpatch
files that need to be applied at build time.  The .dpatch files themselves are
just diff files with a few extra header files on top, e.g. a few descriptive
lines, author, etc.

To add a patch, simply rename your diff file with a .dpatch suffix, add the
header files on top, and add the filename to the `00list' file.

Be careful that the diff line numbering is based on the original upstream
source and possible patches from dpatch files that come earlier in the chain.

 -- Danai SAE-HAN (韓達耐) <danai.sae-han@edpnet.be>, Tue, 25 Aug 2009 23:27:38 +0200
